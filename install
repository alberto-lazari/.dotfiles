#!/bin/bash
set -e
cd "$(dirname "$BASH_SOURCE")"

. lib/symlinks.sh
. lib/options.sh

# Default options
export DOTFILES_INSTALL=true
export DOTFILES_SILENT=false
export DOTFILES_VERBOSE=false
update=false
overwrite_file=/tmp/dotfiles.overwrite

print_help() {
    cat >&2 <<- EOF
	usage: install [-adhquv]
	options:
	  -a, --overwrite-all       overwrite all existing dotfiles
	  -d, --no-overwrite        don't overwrite existing dotfiles
	  -q, --quiet, --silent     don't print log messages
	  -u, --update              update repository before install
	  -v, --verbose             print detailed log messages
	  -h, --help                print this message
	EOF
}

# Create an empty overwrite permission (to ask)
trap 'rm "$overwrite_file" 2> /dev/null' EXIT INT TERM
echo > "$overwrite_file"

parse_opts adhquv "$@" || {
    print_help
    exit 1
}
set -- "${OPTS[@]}"
while [[ $# -gt 0 ]]; do
    case "$1" in
        -a | --overwrite-all)
            echo A > "$overwrite_file" ;;
        -d | --no-overwrite)
            echo D > "$overwrite_file" ;;
        -q | --quiet|--silent)
            DOTFILES_SILENT=true ;;
        -u | --update)
            update=true ;;
        -v | --verbose)
            DOTFILES_VERBOSE=true ;;
        -h | --help)
            print_help
            exit 0
            ;;
        *)  print_help
            exit 1
            ;;
    esac
    shift
done

# Update repo
if $update; then
    $DOTFILES_SILENT || echo Updating repository...
    git pull $($DOTFILES_SILENT && echo -q) origin main

    # Install using the updated script
    exec ./install
fi

programs="$( \
    # List all files, appending `/` to directories
    ls -p |
    # Filter for directories (except `lib`)
    grep -Ev '^lib/$|.*[^/]$' |
    # Strip out the leading `/`
    sed 's|/$||'
)"

# Setup all programs
skipped=()
for program in $programs; do
    if which "$program" &> /dev/null; then
        "$program/setup"
    else
        skipped+=($program)
    fi
done

$DOTFILES_SILENT || {
    echo [-] Some programs were not found, setup skipped for: $(echo ${skipped[@]} | sed 's/ /, /g')
}
