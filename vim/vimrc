" Basic configuration
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Window title format: 'vim - file [+-=] (1 of n)'
set title titlestring=vim\ -\ %t%(\ [%M]%)%a
" Normal backspace behavior
set backspace=2
" Indent with 4 spaces
set expandtab tabstop=4 softtabstop=4 shiftwidth=4
" Show whitespaces with ':set list'
set listchars=eol:$,tab:>·,trail:~,extends:>,precedes:<,space:·
" Indent filetype
filetype plugin indent on
" Fix indentation problems
set nosmartindent cinkeys-=0#
" Enable syntax highlighting
syntax on
" Show partial command while typing it
set showcmd
" Show statusline
set laststatus=2

" Temp files
set noswapfile nobackup undodir=~/.vim/undodir undofile
if !has('nvim')
    " Move .viminfo file
    set viminfo=%,<800,'10,/50,:100,h,f0,n~/.vim/cache/.viminfo
    "           | |    |   |   |    | |  + viminfo file path
    "           | |    |   |   |    | + file marks 0-9,A-Z 0=NOT stored
    "           | |    |   |   |    + disable 'hlsearch' loading viminfo
    "           | |    |   |   + command-line history saved
    "           | |    |   + search history saved
    "           | |    + files marks saved
    "           | + lines saved each register (old name for <, vi6.2)
    "           + save/restore buffer list
else
    set title titlestring=nvim\ -\ %t%(\ [%M]%)%a
endif

" Custom settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Show line numbers relative to the current one
set number relativenumber
" Scroll when over number of lines
set scrolloff=2
" Wrap preserving words and indentation
set linebreak breakindent
" Identify wrapped lines with @ and indentation
let &showbreak='@ '
" Show pattern match results. Default case-insensitive search
set incsearch ignorecase smartcase
" No ESC delay
set timeoutlen=1000 ttimeoutlen=0
" Allow buffers to keep unsaved changes
set hidden
" Remove netrw banner
let g:netrw_banner = 0

" Indent with 2 spaces on specific file types
autocmd FileType md,markdown,typst,html,css setlocal expandtab tabstop=2 softtabstop=2 shiftwidth=2

" Spellcheck specific file types
autocmd FileType text,latex,tex,md,markdown,typst setlocal spell

" Mouse support
" Drains a crazy amount of battery power if enabled
" set mouse=a

" Change cursor shape on different mode
if exists('$ITERM_PROFILE')
    " Vertical bar in insert mode
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    " Block in normal mode
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
    " Underline in replace mode
    let &t_SR = "\<Esc>]50;CursorShape=2\x7"
else
    " Vertical bar in insert mode
    let &t_SI = "\e[5 q"
    " Block in normal mode
    let &t_SR = "\e[4 q"
    " Underline in replace mode
    let &t_EI = "\e[1 q"
endif

" Plugins
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if isdirectory(expand('~/.vim/pack/dotfiles'))
    " Load opt plugins
    for plugin in readfile(expand('~/.vim/plugins.vim'))
        " Ignore comments
        if plugin =~ '^[^"#]'
            let plugin = substitute(plugin, '.*/', '', '')
            exe 'packadd!' plugin
        endif
    endfor

    colorscheme onedark
    " Show horizontal cursor line when using colorscheme
    set cursorline

    " Enable buffers line
    let g:airline#extensions#tabline#enabled = 1
    " Show filename only in buffers line
    let g:airline#extensions#tabline#formatter = 'unique_tail'
    " Don't show encoding if it is default one
    let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'
    " Always show the mode part
    call airline#parts#define_minwidth('mode', 0)

    " Thousand separated line numbers
    function! LineNumber()
        return substitute(line('.'), '\d\@<=\(\(\d\{3\}\)\+\)$', ',&', 'g') . '/' .
        \   substitute(line('$'), '\d\@<=\(\(\d\{3\}\)\+\)$', ',&', 'g')
    endfunction

    call airline#parts#define('linenumber', {'function': 'LineNumber'})

    let g:airline_section_z = airline#section#create(['ln ', 'linenumber', ' col ', '%v'])

    let g:airline_mode_map = {
    \ 'c'      : '●',
    \ 'i'      : '●',
    \ 'n'      : '●',
    \ 'R'      : '●',
    \ 'v'      : '●',
    \ 'V'      : '⁃',
    \ ''     : '◼',
    \ }

    " No '-- INSERT --' in status line
    set noshowmode

    " Custom autoclosing rules for LaTeX and Typst math mode
    for filetype in ['tex', 'latex', 'typst']
        call lexima#add_rule({'char': '$', 'input_after': '$', 'filetype': filetype})
        call lexima#add_rule({'char': '$', 'at': '\%#\$', 'leave': 1, 'filetype': filetype})
        call lexima#add_rule({'char': '<BS>', 'at': '\$\%#\$', 'delete': 1, 'filetype': filetype})
        call lexima#add_rule({'char': '<space>', 'at': '\$\%#\$', 'input_before': ' ', 'input_after': ' ', 'filetype': filetype})
        call lexima#add_rule({'char': '<BS>', 'at': '\$ \%# \$', 'delete': 1, 'filetype': filetype})
    endfor
endif
