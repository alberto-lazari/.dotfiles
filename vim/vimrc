let g:config_dir = expand('<sfile>:p:h')

" Basic configuration
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Window title format: '[n]vim - file [+-=] (1 of n)'
set title titlestring=%{has('nvim')?'nvim':'vim'}\ -\ %t%([%M]%)%a
" Normal backspace behavior
set backspace=2
" Indent with 2 spaces
set expandtab tabstop=2 shiftwidth=2
" Show whitespaces with ':set list'
set listchars=eol:$,tab:-->,trail:~,extends:>,precedes:<,space:Â·
" Indent filetype
filetype plugin indent on
" Fix indentation problems
set nosmartindent cinkeys-=0#
" Enable syntax highlighting
syntax on
" Use true color
set termguicolors
" Show partial command while typing it
set showcmd

" Temp files
set noswapfile nobackup undofile
let &undodir = g:config_dir . '/undodir'

" Move .viminfo file
let &viminfo="%,<800,'10,/50,:1000,h,f0,n" . g:config_dir . '/cache/viminfo'
"             | |    |   |   |     | |  + viminfo file path
"             | |    |   |   |     | + file marks 0-9,A-Z 0=NOT stored
"             | |    |   |   |     + disable 'hlsearch' loading viminfo
"             | |    |   |   + command-line history saved
"             | |    |   + search history saved
"             | |    + files marks saved
"             | + lines saved each register (old name for <, vi6.2)
"             + save/restore buffer list


" Custom settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Scroll when over number of lines
set scrolloff=1
" Wrap preserving words and indentation
set linebreak breakindent
" Identify wrapped lines with @ and indentation
let &showbreak='@ '
" Show pattern match results. Default case-insensitive search
set incsearch ignorecase smartcase
" No ESC delay
set timeoutlen=1000 ttimeoutlen=0
" No timeout on custom mappings
set notimeout ttimeout
" Allow buffers to keep unsaved changes
set hidden
" Remove netrw banner
let g:netrw_banner = 0
" Split buffers on next child
set splitright splitbelow
" No '-- INSERT --' in status line
set noshowmode
" Use English + Italian for spelling
set spelllang=en,it

" Mouse support
" Drains a crazy amount of battery power if enabled (on iTerm)
set mouse=a

" Change cursor shape on different mode
if exists('$ITERM_PROFILE')
  " Vertical bar in insert mode
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  " Block in normal mode
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
  " Underline in replace mode
  let &t_SR = "\<Esc>]50;CursorShape=2\x7"
else
  " Vertical bar in insert mode
  let &t_SI = "\e[5 q"
  " Block in normal mode
  let &t_SR = "\e[4 q"
  " Underline in replace mode
  let &t_EI = "\e[1 q"
endif


" Config modules
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let modules = [
  \ 'autocmds',
  \ 'mappings',
  \ 'status',
  \ 'plugins-config',
\ ]

" Load additional config steps in external modules
for module in modules
  exec 'source' . g:config_dir . '/' . module . '.vim'
endfor

" Trigger FileType autocmds on a vimrc source
filetype detect
