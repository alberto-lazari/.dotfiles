" Import basic configuration
source ~/.vim/simplerc

" Show line numbers relative to the current one
set number relativenumber
" Scroll when over number of lines
set scrolloff=2
" Wrap preserving words and indentation
set linebreak breakindent
" Identify wrapped lines with @ and indentation
let &showbreak='@ '
" Show pattern match results. Default case-insensitive search
set incsearch ignorecase smartcase
" No ESC delay
set timeoutlen=1000 ttimeoutlen=0
" Allow buffers to keep unsaved changes
set hidden

" Mouse support
" Drains a crazy amount of battery power if enabled
" set mouse=a

" Change cursor shape on different mode
if exists('$ITERM_PROFILE')
    " Vertical bar in insert mode
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    " Block in normal mode
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
    " Underline in replace mode
    let &t_SR = "\<Esc>]50;CursorShape=2\x7"
else
    " Vertical bar in insert mode
    let &t_SI = "\e[5 q"
    " Block in normal mode
    let &t_SR = "\e[4 q"
    " Underline in replace mode
    let &t_EI = "\e[1 q"
endif

" Plugins
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if isdirectory(expand('~/.vim/pack/dotfiles'))
    " Load opt plugins
    for plugin in readfile(expand('~/.vim/plugins.vim'))
        " Ignore comments
        if plugin =~ '^[^"#]'
            let plugin = substitute(plugin, '.*/', '', '')
            exe 'packadd!' plugin
        endif
    endfor

    " No '-- INSERT --' in status line
    set noshowmode

    " Enable buffers line
    let g:airline#extensions#tabline#enabled = 1
    " Show filename only in buffers line
    let g:airline#extensions#tabline#formatter = 'unique_tail'
    " Don't show encoding if it is default one
    let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'
    " Goes inactive when focus lost
    " let g:airline_focuslost_inactive = 1
    " Always show the mode part
    call airline#parts#define_minwidth('mode', 0)

    " Enable powerline fonts
    let g:airline_powerline_fonts = 1
    " Hide empty sections
    let g:airline_skip_empty_sections = 1

    " Thousand separated line numbers
    function! LineNumber()
        return substitute(line('.'), '\d\@<=\(\(\d\{3\}\)\+\)$', ',&', 'g') . '/' .
        \   substitute(line('$'), '\d\@<=\(\(\d\{3\}\)\+\)$', ',&', 'g')
    endfunction

    call airline#parts#define('linenumber', {'function': 'LineNumber'})

    let g:airline_section_z = airline#section#create(['ln ', 'linenumber', ' col ', '%v'])

    let g:airline_mode_map = {
    \ 'c'      : '',
    \ 'i'      : '',
    \ 'n'      : '',
    \ 'R'      : '',
    \ 'v'      : '',
    \ 'V'      : '',
    \ ''     : '',
    \ }
endif
